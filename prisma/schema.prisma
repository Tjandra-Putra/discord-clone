datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// Models
model Profile {
  id String @id @default(uuid())
  userId String @unique // from clerk
  name String
  imageUrl String @db.Text
  email String @db.Text

  servers Server[] // one to many relationship
  members Member[] // one to many relationship
  channels Channel[] // one to many relationship

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @db.Text

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // foreign key

  members Member[] // one to many relationship
  channels Channel[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

// This is the role of the member in the server
enum MemberRole{
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade) // foreign key

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade) // foreign key

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}